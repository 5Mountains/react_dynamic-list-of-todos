{"version":3,"sources":["components/TodoList/TodoList.jsx","data/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","status","toSearch","e","setState","target","value","toSelect","this","props","todos","selectUser","toShuffle","newTodos","filter","todo","queryLow","toLowerCase","title","includes","completed","className","onChange","type","onClick","map","key","id","classNames","checked","readOnly","userId","React","Component","request","path","a","fetch","response","data","json","Error","getTodos","getUsers","CurrentUser","users","dataLoad","prevProps","clearUser","name","email","phone","App","selectedUserId","shuffle","clearSelectedUser","sort","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3a79fce.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    status: 'all',\n  }\n\n  toSearch = e => this.setState({ query: e.target.value })\n\n  toSelect = e => this.setState({ status: e.target.value });\n\n  render() {\n    const { todos, selectUser, toShuffle } = this.props;\n    const { query, status } = this.state;\n\n    const todoSearch = (todo) => {\n      const queryLow = query.toLowerCase();\n\n      return todo.title.toLowerCase().includes(queryLow);\n    };\n\n    const statusSearch = (todo) => {\n      switch (status) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        default:\n          return todo;\n      }\n    };\n\n    const newTodos = todos.filter(todoSearch).filter(statusSearch);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__filters\">\n          <label className=\"TodoList__label\">\n            Todo filter:\n            <input\n              onChange={this.toSearch}\n              className=\"TodoList__input\"\n            />\n          </label>\n\n          <label className=\"TodoList__label\">\n            Filter by status:\n            <select\n              className=\"TodoList__select\"\n              onChange={this.toSelect}\n            >\n              <option value=\"all\">Show all</option>\n              <option value=\"active\">Show active</option>\n              <option value=\"completed\">Show completed</option>\n            </select>\n          </label>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={toShuffle}\n          >\n            shuffle\n          </button>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {newTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  { 'TodoList__item--checked': todo.completed },\n                  { 'TodoList__item--unchecked': !todo.completed })}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames('button',\n                    { 'TodoList__user-button': todo.completed },\n                    { 'TodoList__user-button--selected': !todo.completed })}\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n  toShuffle: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = 'https://mate-api.herokuapp.com';\n\nconst request = async(path) => {\n  try {\n    const response = await fetch(`${URL}${path}`);\n    const data = response.json();\n\n    return data;\n  } catch (error) {\n    throw new Error('Whoops!');\n  }\n};\n\nexport const getTodos = async() => {\n  const data = await request('/todos');\n\n  return data;\n};\n\nexport const getUsers = async(userId) => {\n  const data = await request(`/users/${userId}`);\n\n  return data;\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../data/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    users: {},\n  }\n\n  async componentDidMount() {\n    this.dataLoad();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.dataLoad();\n    }\n  }\n\n  async dataLoad() {\n    const response = await getUsers(this.props.userId);\n\n    this.setState({ users: response.data });\n  }\n\n  render() {\n    const { users } = this.state;\n    const { clearUser } = this.props;\n\n    if (!users) {\n      return (\n        <p>Loading data...</p>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {users.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{users.name}</h3>\n        <p className=\"CurrentUser__email\">{users.email}</p>\n        <p className=\"CurrentUser__phone\">{users.phone}</p>\n        <button type=\"button\" onClick={() => clearUser()}>Clear user</button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './data/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    shuffle: false,\n  };\n\n  async componentDidMount() {\n    const response = await getTodos();\n\n    this.setState({\n      todos: response.data.filter(todo => todo.userId),\n    });\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  toShuffle = () => {\n    this.setState(state => ({\n      shuffle: !state.shuffle,\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId, shuffle } = this.state;\n\n    if (shuffle) {\n      todos.sort(() => Math.random() - 0.5);\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            toShuffle={this.toShuffle}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}